# step1 添加 internlm 2.5 模型
进入硅基流动官网：https://cloud.siliconflow.cn/s/internlm

点击“API密钥”复制密钥 
![1724153564787](https://github.com/user-attachments/assets/6e31de94-c3e7-46ac-a651-e748dd3ca2d7)

点击“头像”，点击“设置”,“模型供应商”里选择“SILICONFLOW”,点击“设置”，填入api key,模型列表可以看到internlm 2.5
![image](https://github.com/user-attachments/assets/8a83bb6d-ad60-4df0-9715-e1254dd3ae9e)
![image](https://github.com/user-attachments/assets/5aa9331d-955d-45b4-9ca9-c4f6cf045c21)
![image](https://github.com/user-attachments/assets/235927bb-7035-4f44-b71c-aadb7f2e83f3)
![image](https://github.com/user-attachments/assets/7053ce1c-1b92-4817-861e-2a7323ec644d)



# step2 创建工作流
“创建空白应用”----“工作流”
![1724153136717](https://github.com/user-attachments/assets/d5be32f7-6d51-4e10-beb3-37c153207cbb)
![1724153324165](https://github.com/user-attachments/assets/c1430c00-6c31-45cf-8e9d-e03cc2224339)

# step3 添加LLM节点，并配置
![image](https://github.com/user-attachments/assets/6a39ba51-a379-4e91-aa62-8493ac4d7726)

```
system
- Role: 你是一位植物种植专家，专注于提供针对具体种植问题的详细解决方案。
- Background: 你具备丰富的植物种植经验和知识，能够对各种植物的种植方法给予专业解答。
- Profile: 你的任务是根据用户提出的具体植物种植问题，提供一个单一的、清晰的种植问题示例。
- Skills: 植物种植知识、解决问题能力、专业解答。
- Goals: 根据用户的请求，生成一个具体的植物种植问题示例，确保每次只生成一个问题。
- Constrains: 生成单个具体的植物种植问题示例，每次仅生成一个问题。
- OutputFormat: 生成一个具体的植物种植问题示例。
```

```
user
用户希望获得一个具体的植物种植问题示例。请生成一个单一且具体的种植问题，例如“如何种植西瓜？”或“如何种植草莓？”每次只生成一个问题。
```

```
ASSISTANT
用户需要一个具体的植物种植问题示例。请确保每次只生成一个单独的种植问题，例如“如何种植西瓜？”确保问题清晰且具体。
```

# step 4 测试第一个LLM 节点
点击右上角的“运行”
![image](https://github.com/user-attachments/assets/97236f0c-e2e4-4315-8e29-53088d5c6968)
![image](https://github.com/user-attachments/assets/ac13ed7c-c766-4c69-987b-352eebc00126)

# step5 添加第二个LLM节点，用来生成回答，并输出
在input输入/，选择“text"
![image](https://github.com/user-attachments/assets/6ef8c613-d72a-4e19-9fcd-6edab41c0be2)

连接结束节点，点击右上角，进行测试
![image](https://github.com/user-attachments/assets/012eb899-f317-4091-a99f-38f851cb6491)
![37eaede00349ed18eb5f5ab493014b6](https://github.com/user-attachments/assets/92b316c0-e7e2-4811-91ea-27cc4fcc3f9e)
![image](https://github.com/user-attachments/assets/5287d110-ea48-4015-96b3-bd3f20c3dbf9)

# step6 申请飞书权限
新建应用，获取凭证
![1724159426473](https://github.com/user-attachments/assets/c4ca7f15-73f5-4694-870c-fb9478406c85)
![153cf47a00155d929ba1ae1ad54db37](https://github.com/user-attachments/assets/128832fd-0725-4a83-a254-c8b3579e3041)

开通多维表格权限
![1724159648496](https://github.com/user-attachments/assets/994bacfe-d618-4f7d-b07a-a277492770fd)

开通云文档新建文档权限
点击“开发文档”----“服务端API”----“云文档”----“接口说明”----“文档”----“创建文档”----“权限配置”----“开通权限”
https://open.feishu.cn/document/server-docs/docs/docs/docx-v1/document/create
![1724220376575](https://github.com/user-attachments/assets/c0594057-0b7f-4d6c-b924-51ea5886ca0c)

先在右侧的调试台测试一下，选择切换“tenant_access_token”，"folder_token"不填代表在根目录下创建，点击“开始调试”，调用成功后返回如下图所示
![1724220553630](https://github.com/user-attachments/assets/e6d92ac9-db38-42fc-b6a6-b5311642c4e0)
![1724220786900](https://github.com/user-attachments/assets/9f87fc6a-07fe-4892-843c-b94bb490124e)




点击“创建版本”，保存后会收到通知
![image](https://github.com/user-attachments/assets/580b0035-81d9-4462-983c-1f34c1195cb3)
![image](https://github.com/user-attachments/assets/f7bc8a67-d1a7-4583-a2cc-c342967a8a47)

创建新节点，选择“工具”----“获取飞书自建应用的 tenant_access_token”，填入APP ID 和 APP Secret，运行测试输出结果“text”里的“tenant_access_token”就是我们要的
![image](https://github.com/user-attachments/assets/9320254d-09f3-4964-8011-5cb79a6d8236)
![image](https://github.com/user-attachments/assets/8921c96d-f7b2-4a1e-b76f-09a6ff60b731)
![153cf47a00155d929ba1ae1ad54db37](https://github.com/user-attachments/assets/128832fd-0725-4a83-a254-c8b3579e3041)
![image](https://github.com/user-attachments/assets/9447c7f8-57f6-469e-bedf-4940d4d4bf9d)

创建一个“参数提取”节点，上一个节点的输出作为本节点的输入，选择模型，添加提取参数，给出指令。从上一个节点复制输出来测试。可以看到tenant_access_token已经拎出来了。
![1724162066326](https://github.com/user-attachments/assets/92ac8a22-fa83-41a3-86e6-a338d397e01a)
![image](https://github.com/user-attachments/assets/329f4205-602b-4db9-a097-1fd3d534db08)
![image](https://github.com/user-attachments/assets/8fcea4eb-7f3a-4c90-9468-1117e71d6714)
![1724162749866](https://github.com/user-attachments/assets/2fc94dc6-52f6-41aa-96a6-fd944f5c51c2)


新建节点，选择“工具”----“创建多维表格”，选择上一个节点返回的“tenant_access_token”，填写上面新建的应用名称，文件夹名可以不填写。运行测试，可以看到输出结果“app_token”和“url”
![9a929927654daa96d030cd2f4b2f0dc](https://github.com/user-attachments/assets/2717fdb4-abb7-4987-a111-0c76d9c35ee1)
![811fca34312908b863614f7644f49ad](https://github.com/user-attachments/assets/e9cfdba0-f15f-4dc4-8dba-b0b2c27d2f45)
![image](https://github.com/user-attachments/assets/141299ab-7867-4e1a-84c1-a3cd9f387db4)
![1724163028403](https://github.com/user-attachments/assets/d258b967-e6a4-4e35-99d5-5078d6f8852c)
![image](https://github.com/user-attachments/assets/d2d44adb-3291-4341-8176-3b8053cd55f6)
![1724163746819](https://github.com/user-attachments/assets/2afc42b7-65f1-474b-b77a-0d7afdbc921f)

创建一个“参数提取”节点来提取“app_token”和“default_table_id”，上一个节点的输出作为本节点的输入，选择模型，添加提取参数，给出指令。从上一个节点复制输出来测试。
![image](https://github.com/user-attachments/assets/bbd7c86b-0d24-4ca8-9048-4842d4389a75)
![image](https://github.com/user-attachments/assets/573647cc-ef6a-415c-87c0-8e0237fd8230)





















